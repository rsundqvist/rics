################################################################################
# For help, see https://rics.readthedocs.io                                    #
################################################################################
[translator]
fmt = "{id}:{name}[ (original: {original_name})] *{from}â€ {to}"

# ------------------------------------------------------------------------------
# Name-to-source mapping configuration. Binds names to source, eg 'cute_animals'
# -> 'my_database.animals'. Overrides take precedence over scoring logic.
[translator.mapping]
unmapped_values_action = "raise"
score_function = "modified_hamming"

[[translator.mapping.score_function_heuristics]]
function = "like_database_table"

[translator.mapping.overrides]
firstTitle = "title.basics"
nconst = "name.basics"
tconst = "title.basics"

# ------------------------------------------------------------------------------
# Handling of unknown IDs.
[unknown_ids]
fmt = "{id} not translated; default name={name}"

[unknown_ids.overrides]
from = "?"
to = "?"

[unknown_ids.overrides.'name.basics']
name = "Name unknown"

[unknown_ids.overrides.'title.basics']
name = "Title unknown"
original_name = "Original title unknown"

################################################################################
# Fetching configuration.
################################################################################
[fetching.PandasFetcher]
read_path_format= "../../data-cache/clean_and_fix_ids/{}.tsv.pkl"

# ------------------------------------------------------------------------------
# Placeholder mapping configuration. Binds actual names in sources (such as
# column names in an SQL table) to wanted names, eg id = 'animal_id'.
[fetching.mapping.overrides.'name.basics']
id = "nconst"
name = "primaryName"
from = "birthYear"
to = "deathYear"

[fetching.mapping.overrides.'title.basics']
id = "tconst"
name = "primaryTitle"
original_name = "originalTitle"
from = "startYear"
to = "endYear"
