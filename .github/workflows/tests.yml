name: tests

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "info"
      tags:
        required: false
        description: "Test scenario tags"
  push:
    branches:
     - master
  pull_request:
    branches:

env:
  # Need to be explicit when using pip; this is only for the official Poetry (curl-based) installer.
  # https://github.com/python-poetry/poetry/issues/7611
  POETRY_VERSION: 1.3.2

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files

  tests:
    needs: linting
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: true
      matrix:
        os: [ Ubuntu, MacOS, Windows ]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
        experimental: [false]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        shell: bash
        run: |
          pip install nox
          pip install poetry==$POETRY_VERSION

      - name: Run mypy with nox
        shell: bash
        run: nox --force-color -s mypy-${{ matrix.python-version }}

      - name: Run tests with nox
        shell: bash
        run: nox --force-color -s tests-${{ matrix.python-version }}

      - name: Run safety check
        if: matrix.python-version == '3.10' && matrix.os == 'Ubuntu'
        shell: bash
        run: nox --force-color -s safety

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install system deps
        shell: bash
        run: |
          pip install nox
          pip install poetry==$POETRY_VERSION

      - name: Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: Create coverage report
        shell: bash
        run: |
          nox --force-color --session=coverage -- --fmt xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
